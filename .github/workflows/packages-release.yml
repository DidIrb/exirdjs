name: Create Release

on:
  push:
    branches:
      - "main"
    # paths:
    # - '.changeset/**'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Cache PNPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Extract version number
        id: get_version
        run: echo "VERSION=$(jq -r '.version' packages/exird/package.json)" >> $GITHUB_ENV

      - name: Create Release Pull Request
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: false
          branch: main

      - name: Set release status
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            gh api -X POST /repos/${{ github.repository }}/statuses/${{ github.sha }} \
              -f state=success \
              -f context="release"
