name: Publish Packages and Create Release

on:
  push:
    branches:
      - main
    paths:
      - ".changeset/**"

jobs:
  Release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Cache PNPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests, and Lint
        run: pnpm run test && pnpm run lint

      - name: Configure npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc

      - name: Build packages
        run: pnpm -r run build

      - name: Generate changelog and version packages
        id: changesets
        uses: changesets/action@v1
        with:
          commit: "chore(release): version packages [skip ci]"
          title: "chore(release): version packages [skip ci]"
          version: pnpm changeset version
          publish: false

      - name: Publish packages
        run: pnpm changeset publish

      - name: Extract version number
        id: get_version
        run: echo "VERSION=$(jq -r '.version' packages/exird/package.json)" >> $GITHUB_ENV

      - name: Get Pull Request Body
        id: get_pr_body
        run: |
          PR_URL=$(gh pr list --repo ${{ github.repository }} --state open --author github-actions[bot] --json url --jq '.[0].url')
          PR_BODY=$(gh pr view $PR_URL --json body --jq '.body')
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "$PR_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          release_name: "exirdjs@v${{ env.VERSION }}"
          body: ${{ env.PR_BODY }}
          draft: false
          prerelease: false
