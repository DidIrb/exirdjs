name: Publish Packages and Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'packages/**'

jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Cache PNPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc

      - name: Build packages
        run: pnpm -r --filter ./packages/** run build

      - name: Publish Packages
        run: pnpm changeset publish

      - name: Generate changelog
        id: changesets
        uses: changesets/action@v2
        with:
          publish: false

      - name: Extract version number
        id: get_version
        run: echo "VERSION=$(jq -r '.version' packages/exird/package.json)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: exirdjs@v${{ env.VERSION }}
          body: |
            Changes in this release:
            ${{ steps.changesets.outputs.changelog }}
          draft: false
          prerelease: false
